@model MVC.Todo.JsPeanut.Models.ViewModels.TodoViewModel

@{
    ViewData["Title"] = "To-do App";
}

<form asp-action="Insert" method="post" id="createform">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group" id="createform">
        <label asp-for="Todo.Name">To do name</label>
        <input type="text" asp-for="Todo.Name" class="form-control" id="todoname" placeholder="Enter your to do's name">
        <span asp-validation-for="Todo.Name" class="text-danger" id="createtodoerrormessage"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" id="submitbutton" style="margin: 1em 0px 1em 0px;" class="btn btn-success" />
    </div>
</form>

<div class="todolist">
    <ul id="todolist">
        @foreach (var todo in Model.TodoList)
        {
            @if (todo.IsComplete == false)
            {
                <li class="listitems">
                    @todo.Name
                    <a asp-action="MarkAsComplete" asp-route-id="@todo.Id" method="post" class="btn btn-success">Mark as complete</a>
                    <a asp-action="Delete" asp-route-id="@todo.Id" method="post" class="btn btn-danger">Delete</a>
                    <a onclick="toggleUpdateInput('@todo.Id')" class="btn btn-primary">Update</a>
                    <form asp-action="Update" method="post" class="updateformbutton" id="updateform_@todo.Id" style="display: none;">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="text" asp-for="Todo.Name" id="updatetodoinput" style="margin-left: 15px;" />
                        <span asp-validation-for="Todo.Name" class="text-danger"></span>
                        <input type="hidden" asp-for="Todo.Id" value="@todo.Id">
                        <input type="hidden" asp-for="Todo.IsComplete" value="@todo.IsComplete">
                        <input type="submit" value="Update" />
                    </form>
                </li>
            }
            else
            {
                <li class="listitems" style="color: green;">
                    @todo.Name
                    <a asp-action="MarkAsComplete" asp-route-id="@todo.Id" method="post" class="btn btn-secondary">Mark as incomplete</a>
                    <a asp-action="Delete" asp-route-id="@todo.Id" method="post" class="btn btn-danger">Delete</a>
                    <a onclick="toggleUpdateInput('@todo.Id')" class="btn btn-primary">Update</a>
                    <form asp-action="Update" method="post" class="updateformbutton" id="updateform_@todo.Id" style="display: none;">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="text" asp-for="Todo.Name" id="updatetodoinput" style="margin-left: 15px;" />
                        <span asp-validation-for="Todo.Name" class="text-danger"></span>
                        <input type="hidden" asp-for="Todo.Id" value="@todo.Id">
                        <input type="hidden" asp-for="Todo.IsComplete" value="@todo.IsComplete">
                        <input type="submit" value="Update" />
                    </form>
                </li>
            }
        }
    </ul>
</div>

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        //When the user clicks on an update button more than once, the previous one's form's id will be stored in this variable
        //This variable will be used to hide input textbox once the user clicks another button
        let previousFormId = null;
        createTodoInput.value = "";

        function toggleUpdateInput(todoId) {
            var updateForm = document.getElementById("updateform_" + todoId);
            if (updateForm.style.display === "none") {
                if (previousFormId) {
                    document.getElementById(previousFormId).style.display = "none";
                }
                updateForm.style.display = "block";
                //The current form will become next the previous form when the user clicks another button
                previousFormId = "updateform_" + todoId;
            } else {
                updateForm.style.display = "none";
                previousFormId = null;
            }
        }
    </script>
}

          